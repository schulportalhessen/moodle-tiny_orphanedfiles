{"version":3,"file":"tablesorter.min.js","sources":["../src/tablesorter.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny orphanedfiles plugin for Moodle.\n *\n * @module     tiny_orphanedfiles/plugin\n * @copyright  2023 Andreas Siebel <andreas.siebel@schulportal.hessen.de>\n * @copyright  2023 Andreas Schenkel <andreas.schenkel@schulportal.hessen.de>\n * @author     2023 Andreas Siebel <andreas.siebel@schulportal.hessen.de>\n * @author     2023 Andreas Schenkel <andreas.schenkel@schulportal.hessen.de>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n *\n * @param {string} tableID\n */\nexport const init = (tableID) => {\n   registerListeners(tableID);\n};\n\n/**\n * Registers the listeners for each header cell in the table.\n *\n * @param {string} tableID\n */\nconst registerListeners = (tableID) => {\n   const table = document.getElementById(tableID);\n   const headerCells = table.querySelectorAll('thead th');\n\n   headerCells.forEach((cell, index) => {\n      // Add listener for columns that where marked as sortable by data-attribute data-sortable = 'true'.\n      const sortable = cell.getAttribute(\"data-sortable\") || 'false';\n      if (sortable === 'true') {\n         cell.addEventListener('click', () => {\n            sortTable(tableID, index);\n         });\n      }\n   });\n};\n\n/**\n * Changes the sortorder of a table depending on a specific column.\n *\n * @param {string} tableID The id of the table which should be sorted.\n * @param {number} column The column by which should be sorted\n */\nconst sortTable = (tableID, column) => {\n   const table = document.getElementById(tableID);\n   const rows = Array.from(table.getElementsByTagName(\"tr\"));\n   rows.shift(); // Remove the header row from sorting\n   const sortOrder = table.rows[0].cells[column].getAttribute(\"data-sort-order\") || 'asc';\n\n   rows.sort(function(a, b) {\n      const textA = a.getElementsByTagName(\"td\")[column].getAttribute('data-sort');\n      const textB = b.getElementsByTagName(\"td\")[column].getAttribute('data-sort');\n\n      if (sortOrder === \"desc\") {\n         if (!isNaN(textA) && !isNaN(textB)) {\n            return Number(textA) - Number(textB);\n         } else {\n            return textA.localeCompare(textB);\n         }\n      } else {\n         if (!isNaN(textA) && !isNaN(textB)) {\n            return Number(textB) - Number(textA);\n         } else {\n            return textB.localeCompare(textA);\n         }\n      }\n   });\n\n   // Remove body of table to clean up the table.\n   const tbody = table.getElementsByTagName(\"tbody\")[0];\n\n   // Remove all asc or desc in data-sort-order of each column so that only ONE column will be marked as sorted.\n   for (let columnIndex = 0; columnIndex < table.rows[0].cells.length; columnIndex++) {\n      const columnHeader = table.rows[0].cells[columnIndex];\n      columnHeader.setAttribute(\"data-sort-order\", \"\");\n   }\n\n   table.rows[0].cells[column].setAttribute(\"data-sort-order\", sortOrder === 'asc' ? 'desc' : 'asc');\n   tbody.innerHTML = \"\";\n\n   // Insert sorted rows.\n   rows.forEach(function(row) {\n      tbody.appendChild(row);\n   });\n};\n"],"names":["tableID","registerListeners","document","getElementById","querySelectorAll","forEach","cell","index","getAttribute","addEventListener","sortTable","column","table","rows","Array","from","getElementsByTagName","shift","sortOrder","cells","sort","a","b","textA","textB","isNaN","localeCompare","Number","tbody","columnIndex","length","setAttribute","innerHTML","row","appendChild"],"mappings":"mKA8BqBA,UAClBC,kBAAkBD,gBAQfC,kBAAqBD,UACVE,SAASC,eAAeH,SACZI,iBAAiB,YAE/BC,SAAQ,CAACC,KAAMC,SAGP,UADAD,KAAKE,aAAa,kBAAoB,UAEpDF,KAAKG,iBAAiB,SAAS,KAC5BC,UAAUV,QAASO,cAYzBG,UAAY,CAACV,QAASW,gBACnBC,MAAQV,SAASC,eAAeH,SAChCa,KAAOC,MAAMC,KAAKH,MAAMI,qBAAqB,OACnDH,KAAKI,cACCC,UAAYN,MAAMC,KAAK,GAAGM,MAAMR,QAAQH,aAAa,oBAAsB,MAEjFK,KAAKO,MAAK,SAASC,EAAGC,SACbC,MAAQF,EAAEL,qBAAqB,MAAML,QAAQH,aAAa,aAC1DgB,MAAQF,EAAEN,qBAAqB,MAAML,QAAQH,aAAa,mBAE9C,SAAdU,UACIO,MAAMF,QAAWE,MAAMD,OAGlBD,MAAMG,cAAcF,OAFpBG,OAAOJ,OAASI,OAAOH,OAK5BC,MAAMF,QAAWE,MAAMD,OAGlBA,MAAME,cAAcH,OAFpBI,OAAOH,OAASG,OAAOJ,gBAQjCK,MAAQhB,MAAMI,qBAAqB,SAAS,OAG7C,IAAIa,YAAc,EAAGA,YAAcjB,MAAMC,KAAK,GAAGM,MAAMW,OAAQD,cAAe,CAC3DjB,MAAMC,KAAK,GAAGM,MAAMU,aAC5BE,aAAa,kBAAmB,IAGhDnB,MAAMC,KAAK,GAAGM,MAAMR,QAAQoB,aAAa,kBAAiC,QAAdb,UAAsB,OAAS,OAC3FU,MAAMI,UAAY,GAGlBnB,KAAKR,SAAQ,SAAS4B,KACnBL,MAAMM,YAAYD"}